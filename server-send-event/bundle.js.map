{"version":3,"sources":["webpack:///webpack/bootstrap 657d27b2897dc9ee6b26","webpack:///./src/main.js","webpack:///./src/ServerSendEventHandler.js","webpack:///./src/ServerSendEventHandlerException.js","webpack:///./src/ProductList.js","webpack:///./src/ProductListException.js"],"names":["window","onload","product_list","sse_handler","loadList","tbody","document","getElementById","makeTableFromProductList","getProductList","addEventHandler","ADD","addItem","bind","insertRow","undefined","UPDATE","updateItem","updateRow","DELETE","deleteItemById","deleteRow","listen","docfrag","createDocumentFragment","forEach","product","appendChild","tr","createElement","id","name","price","stock","setAttribute","td_name","td_price","td_stock","textContent","key","Object","prototype","hasOwnProperty","call","updating_td","querySelector","removeChild","ServerSendEventHandler","update_events","delete_events","add_events","url","length","includes","event_source","EventSource","addEventListener","e","response_data","JSON","parse","data","event_handler","onerror","event_type","push","index","findIndex","is","item","splice","ServerSendEventHandlerException","message","constructor","Error","ProductList","xhr","XMLHttpRequest","open","send","result","responseText","deleting_item","updating_item","prop","ProductListException"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 657d27b2897dc9ee6b26\n **/","/**\n * Created by simon on 9/4/16.\n */\nimport ServerSendEventHandler from './ServerSendEventHandler.js';\nimport ProductList from './ProductList.js';\n\nwindow.onload = function () {\n    let product_list = new ProductList();\n    let sse_handler = new ServerSendEventHandler();\n    product_list.loadList('./getProductList.php');\n    let tbody = document.getElementById(\"product_list\");\n    makeTableFromProductList(tbody, product_list.getProductList());\n    sse_handler.addEventHandler(ServerSendEventHandler.ADD, product_list.addItem.bind(product_list));\n    sse_handler.addEventHandler(ServerSendEventHandler.ADD, insertRow.bind(undefined, tbody));\n    sse_handler.addEventHandler(ServerSendEventHandler.UPDATE, product_list.updateItem.bind(product_list));\n    sse_handler.addEventHandler(ServerSendEventHandler.UPDATE, updateRow);\n    sse_handler.addEventHandler(ServerSendEventHandler.DELETE, product_list.deleteItemById.bind(product_list));\n    sse_handler.addEventHandler(ServerSendEventHandler.DELETE, deleteRow.bind(undefined, tbody));\n    sse_handler.listen(\"./getUpdates.php\");\n};\n/**\n * 顯示產品清單\n * @param tbody\n * @param product_list\n */\nfunction makeTableFromProductList (tbody, product_list) {\n    let docfrag = document.createDocumentFragment();\n    product_list.forEach(product => insertRow(docfrag, product));\n    tbody.appendChild(docfrag);\n}\n/**\n * 插入產品\n * @param tbody\n * @param product\n */\nfunction insertRow (tbody, product) {\n    let tr = document.createElement(\"tr\");\n    let {id, name, price, stock} = product;\n    tr.setAttribute('id', id);\n    let td_name = document.createElement('td');\n    let td_price = document.createElement('td');\n    let td_stock = document.createElement('td');\n    td_name.textContent = name;\n    td_name.setAttribute('name','name');\n    td_price.textContent = price;\n    td_price.setAttribute('name','price');\n    td_stock.textContent = stock;\n    td_stock.setAttribute('name','stock');\n    tr.appendChild(td_name);\n    tr.appendChild(td_price);\n    tr.appendChild(td_stock);\n    tbody.appendChild(tr);\n}\n\n/**\n * 更新產品\n * @param product\n */\nfunction updateRow (product) {\n    let id = product.id;\n    let tr = document.getElementById(id);\n    if (tr === null) {\n        return;\n    }\n    for (let key in product) {\n        if (Object.prototype.hasOwnProperty.call(product, key)) {\n            let updating_td = tr.querySelector(`td[name=\"${key}\"]`);\n            if (updating_td !== null) {\n                updating_td.textContent = product[key];\n            }\n        }\n    }\n}\n\n/**\n * 刪除產品\n * @param tbody\n * @param product\n */\nfunction deleteRow (tbody, product) {\n    let id = product.id;\n    let tr = document.getElementById(id);\n    if (tr !== null) {\n        tbody.removeChild(tr);\n    }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/main.js\n **/","/**\n * Created by simon on 9/4/16.\n */\n\nimport ServerSendEventHandlerException from './ServerSendEventHandlerException.js';\n\nconst ADD = 0; // 產品新增事件代碼\nconst UPDATE = 1; // 產品修改事件代碼\nconst DELETE = 2; // 產品刪除事件代碼\n/**\n * Server Send Event 處理物件\n */\nexport default class ServerSendEventHandler {\n    constructor () {\n        this.update_events = [];\n        this.delete_events = [];\n        this.add_events = [];\n    }\n\n    /**\n     * 取得產品新增事件代碼\n     * @returns {number}\n     * @constructor\n     */\n    static get ADD () {\n        return ADD;\n    }\n\n    /**\n     * 取得產品修改事件代碼\n     * @returns {number}\n     * @constructor\n     */\n    static get UPDATE () {\n        return UPDATE;\n    }\n\n    /**\n     * 取得產品刪除事件代碼\n     * @returns {number}\n     * @constructor\n     */\n    static get DELETE () {\n        return DELETE;\n    }\n\n    /**\n     * 開始監聽 Server Send Event 並進行處理\n     * @param url\n     */\n    listen (url) {\n        if ([this.update_events.length, this.delete_events.length, this.add_events.length].includes(0)) {\n            throw new ServerSendEventHandlerException(`Error #2: Event handlers must be specified before listing event.`);\n        }\n        let event_source = new EventSource(url);\n        event_source.addEventListener('add',  (e) => {\n            let response_data = JSON.parse(e.data);\n            this.add_events.forEach( event_handler => event_handler(response_data));\n        }, false);\n        event_source.addEventListener('update',  (e) => {\n            let response_data = JSON.parse(e.data);\n            this.update_events.forEach(event_handler => event_handler(response_data));\n        }, false);\n        event_source.addEventListener('delete', (e) => {\n            let response_data = JSON.parse(e.data);\n            this.delete_events.forEach(event_handler => event_handler(response_data));\n        }, false);\n        event_source.onerror = (e) => {\n            throw new ServerSendEventHandlerException(`Error #4: Server send event failed: ${e}.`);\n        };\n    }\n\n    /**\n     * 附加事件處理函數\n     * @param event_type\n     * @param event_handler\n     */\n    addEventHandler (event_type, event_handler) {\n        switch (event_type) {\n            case ServerSendEventHandler.ADD:\n                this.add_events.push(event_handler);\n                break;\n            case ServerSendEventHandler.UPDATE:\n                this.update_events.push(event_handler);\n                break;\n            case ServerSendEventHandler.DELETE:\n                this.delete_events.push(event_handler);\n                break;\n            default:\n                throw new ServerSendEventHandlerException(`Error #1: Invalid event types: ${event_type}.`);\n                break;\n        }\n    }\n\n    /**\n     * 移除事件處理函數\n     * @param event_type\n     * @param event_handler\n     */\n    removeEventHandler (event_type, event_handler) {\n        let index;\n        switch (event_type) {\n            case ServerSendEventHandler.ADD:\n                index = this.add_events.findIndex(item => Object.is(item, event_handler));\n                if (index === -1) {\n                    throw new ServerSendEventHandlerException(`Error #3: No such event handler.`);\n                }\n                this.add_events.splice(index, 1);\n                break;\n            case ServerSendEventHandler.UPDATE:\n                index = this.update_events.findIndex(item => Object.is(item, event_handler));\n                if (index === -1) {\n                    throw new ServerSendEventHandlerException(`Error #3: No such event handler.`);\n                }\n                this.update_events.splice(index, 1);\n                break;\n            case ServerSendEventHandler.DELETE:\n                index = this.delete_events.findIndex(item => Object.is(item, event_handler));\n                if (index === -1) {\n                    throw new ServerSendEventHandlerException(`Error #3: No such event handler.`);\n                }\n                this.delete_events.splice(index, 1);\n                break;\n            default:\n                throw new ServerSendEventHandlerException(`Error #1: Invalid event types: ${event_type}.`);\n                break;\n        }\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/ServerSendEventHandler.js\n **/","/**\n * Created by simon on 9/4/16.\n */\n\n/**\n * ServerSendEventHandler 專屬 Exception\n */\nexport default class ServerSendEventHandlerException  extends Error {\n    constructor(message) {\n        super(message);\n        this.name = this.constructor.name;\n        this.message = message;\n    }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/ServerSendEventHandlerException.js\n **/","/**\n * Created by simon on 9/4/16.\n */\nimport ProductListException from './ProductListException.js';\n/**\n * 維護本地產品列表的物件\n */\nexport default class ProductList {\n    constructor () {\n        this.product_list = [];\n    }\n\n    /**\n     * 從 Server 取得目前所有產品列表\n     * @param url Server Url\n     */\n    loadList (url) {\n        try {\n            let xhr = new XMLHttpRequest();\n            // 因為這個方法必須確實取得資料才能回傳，所以使用同步版本的 xhr\n            xhr.open(\"GET\", url, false);\n            xhr.send();\n            let result = JSON.parse(xhr.responseText);\n            this.product_list = result;\n            return result;\n        } catch (e) {\n            throw new ProductListException(`Error #1: Cannot load product list from remote server: ${url}.`)\n        }\n    }\n\n    /**\n     * 取得產品列表\n     * @returns {Array|*}\n     */\n    getProductList () {\n        return this.product_list;\n    }\n\n    /**\n     * 增加產品\n     * @param item\n     */\n    addItem (item) {\n         this.product_list.push(item);\n    }\n\n    /**\n     * 刪除產品\n     * @param deleting_item\n     */\n    deleteItemById (deleting_item) {\n        let index = this.product_list.findIndex(item => deleting_item.id === item.id);\n        if (index === -1) {\n            throw new ProductListException(`Error #2: Delete product error, not such product id: ${deleting_item.id}.`);\n        }\n        this.product_list.splice(index,1);\n    }\n\n    /**\n     * 更新產品\n     * @param updating_item\n     */\n    updateItem (updating_item) {\n        let index = this.product_list.findIndex(item => item.id === updating_item.id);\n        if (index === -1) {\n            throw new ProductListException(`Error #3: Update product error, not such product id: ${updating_item.id}.`);\n        }\n        // 更新產品部分資訊\n        for (let prop in updating_item) {\n            if (Object.prototype.hasOwnProperty.call(updating_item, prop)) {\n                this.product_list[index][prop] = updating_item[prop];\n            }\n        }\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/ProductList.js\n **/","/**\n * Created by simon on 9/4/16.\n */\n\n/**\n * ProductList 專屬 Exception\n */\nexport default class ProductListException  extends Error {\n    constructor(message) {\n        super(message);\n        this.name = this.constructor.name;\n        this.message = message;\n    }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/ProductListException.js\n **/"],"sourceRoot":""}