{"version":3,"sources":["webpack:///webpack/bootstrap c2ec857c817eec9c9320","webpack:///./src/main.js","webpack:///./src/ServerSendEventHandler.js","webpack:///./src/ServerSendEventHandlerException.js","webpack:///./src/ProductList.js","webpack:///./src/ProductListException.js"],"names":["window","onload","product_list","sse_handler","loadList","makeTableFromProductList","getProductList","tbody_id","tbody","document","getElementById","docfrag","createDocumentFragment","Array","prototype","forEach","call","product","tr","createElement","name","price","stock","td_name","td_price","td_stock","textContent","appendChild","ADD","UPDATE","DELETE","ServerSendEventHandler","update_events","delete_events","add_events","url","length","includes","evtSource","EventSource","addEventListener","e","response_data","JSON","parse","data","event_handler","onerror","message","event_type","Notifier","push","index","findIndex","Object","is","item","splice","ServerSendEventHandlerException","constructor","Error","ProductList","xhr","XMLHttpRequest","open","send","result","responseText","id","updating_item","prop","hasOwnProperty","ProductListException"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap c2ec857c817eec9c9320\n **/","/**\n * Created by simon on 9/4/16.\n */\nimport ServerSendEventHandler from './ServerSendEventHandler.js';\nimport ProductList from './ProductList.js';\n\nwindow.onload = function () {\n    let product_list = new ProductList();\n    let sse_handler = new ServerSendEventHandler();\n    product_list.loadList('./getProductList.php');\n    makeTableFromProductList(\"product_list\", product_list.getProductList());\n};\nfunction makeTableFromProductList (tbody_id, product_list) {\n    let tbody = document.getElementById(tbody_id);\n    let docfrag = document.createDocumentFragment();\n    Array.prototype.forEach.call(product_list, function (product) {\n        let tr = document.createElement(\"tr\");\n        let {name, price, stock} = product;\n        let td_name = document.createElement('td');\n        let td_price = document.createElement('td');\n        let td_stock = document.createElement('td');\n        td_name.textContent = product.name;\n        td_price.textContent = product.price;\n        td_stock.textContent = product.stock;\n        tr.appendChild(td_name);\n        tr.appendChild(td_price);\n        tr.appendChild(td_stock);\n        docfrag.appendChild(tr);\n    });\n    tbody.appendChild(docfrag);\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/main.js\n **/","/**\n * Created by simon on 9/4/16.\n */\n\nimport ServerSendEventHandlerException from './ServerSendEventHandlerException.js';\n\nconst ADD = 0; // 產品新增事件代碼\nconst UPDATE = 1; // 產品修改事件代碼\nconst DELETE = 2; // 產品刪除事件代碼\n/**\n * Server Send Event 處理物件\n */\nexport default class ServerSendEventHandler {\n    constructor () {\n        this.update_events = [];\n        this.delete_events = [];\n        this.add_events = [];\n    }\n\n    /**\n     * 取得產品新增事件代碼\n     * @returns {number}\n     * @constructor\n     */\n    static get ADD () {\n        return ADD;\n    }\n\n    /**\n     * 取得產品修改事件代碼\n     * @returns {number}\n     * @constructor\n     */\n    static get UPDATE () {\n        return UPDATE;\n    }\n\n    /**\n     * 取得產品刪除事件代碼\n     * @returns {number}\n     * @constructor\n     */\n    static get DELETE () {\n        return DELETE;\n    }\n\n    /**\n     * 開始監聽 Server Send Event 並進行處理\n     * @param url\n     */\n    listen (url) {\n        if ([this.update_events.length, this.delete_events.length, this.add_events.length].includes(0)) {\n            throw new ServerSendEventHandlerException(`Error #2: Event handlers must be specified before listing event.`);\n        }\n        let evtSource = new EventSource(\"url\");\n        evtSource.addEventListener('add', function (e) {\n            let response_data = JSON.parse(e.data);\n            Array.prototype.forEach.call(this.add_events, function (event_handler) {\n                event_handler(response_data);\n            });\n        }, false);\n        evtSource.addEventListener('update', function (e) {\n            let response_data = JSON.parse(e.data);\n            Array.prototype.forEach.call(this.update_events, function (event_handler) {\n                event_handler(response_data);\n            });\n        }, false);\n        evtSource.addEventListener('delete', function (e) {\n            let response_data = JSON.parse(e.data);\n            Array.prototype.forEach.call(this.delete_events, function (event_handler) {\n                event_handler(response_data);\n            });\n        }, false);\n        evtSource.onerror = function(e) {\n            throw new ServerSendEventHandlerException(`Error #4: Server send event failed: ${e.message}.`);\n        };\n    }\n\n    /**\n     * 附加事件處理函數\n     * @param event_type\n     * @param event_handler\n     */\n    addEventHandler (event_type, event_handler) {\n        switch (event_type){\n            case Notifier.ADD:\n                this.add_events.push(event_handler);\n                break;\n            case Notifier.UPDATE:\n                this.update_events.push(event_handler);\n                break;\n            case Notifier.DELETE:\n                this.delete_events.push(event_handler);\n                break;\n            default:\n                throw new ServerSendEventHandlerException(`Error #1: Invalid event types: ${event_type}.`);\n                break;\n        }\n    }\n\n    /**\n     * 移除事件處理函數\n     * @param event_type\n     * @param event_handler\n     */\n    removeEventHandler (event_type, event_handler) {\n        switch (event_type) {\n            case Notifier.ADD:\n                let index = this.add_events.findIndex(item => Object.is(item, event_handler));\n                if (index === -1) {\n                    throw new ServerSendEventHandlerException(`Error #3: No such event handler.`);\n                }\n                this.add_events.splice(index, 1);\n                break;\n            case Notifier.UPDATE:\n                this.update_events.findIndex(item => Object.is(item, event_handler));\n                if (index === -1) {\n                    throw new ServerSendEventHandlerException(`Error #3: No such event handler.`);\n                }\n                this.update_events.splice(index, 1);\n                break;\n            case Notifier.DELETE:\n                this.delete_events.findIndex(item => Object.is(item, event_handler));\n                if (index === -1) {\n                    throw new ServerSendEventHandlerException(`Error #3: No such event handler.`);\n                }\n                this.delete_events.splice(index, 1);\n                break;\n            default:\n                throw new ServerSendEventHandlerException(`Error #1: Invalid event types: ${event_type}.`);\n                break;\n        }\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/ServerSendEventHandler.js\n **/","/**\n * Created by simon on 9/4/16.\n */\n\n/**\n * ServerSendEventHandler 專屬 Exception\n */\nexport default class ServerSendEventHandlerException  extends Error {\n    constructor(message) {\n        super(message);\n        this.name = this.constructor.name;\n        this.message = message;\n    }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/ServerSendEventHandlerException.js\n **/","/**\n * Created by simon on 9/4/16.\n */\nimport ProductListException from './ProductListException.js';\n/**\n * 維護本地產品列表的物件\n */\nexport default class ProductList {\n    constructor () {\n        this.product_list = [];\n    }\n\n    /**\n     * 從 Server 取得目前所有產品列表\n     * @param url Server Url\n     */\n    loadList (url) {\n        try {\n            let xhr = new XMLHttpRequest();\n            // 因為這個方法必須確實取得資料才能回傳，所以使用同步版本的 xhr\n            xhr.open(\"GET\", url, false);\n            xhr.send();\n            let result = JSON.parse(xhr.responseText);\n            this.product_list = result;\n            return result;\n        } catch (e) {\n            throw new ProductListException(`Error #1: Cannot load product list from remote server: ${url}.`)\n        }\n    }\n\n    /**\n     * 取得產品列表\n     * @returns {Array|*}\n     */\n    getProductList () {\n        return this.product_list;\n    }\n\n    /**\n     * 增加產品\n     */\n    addItem (item) {\n         this.product_list.push(item);\n    }\n\n    /**\n     * 刪除產品\n     * @param id\n     */\n    deleteItemById (id) {\n        let index = this.product_list.findIndex(item => id === item.id);\n        if (index === -1) {\n            throw new ProductListException(`Error #2: Delete product error, not such product id: ${id}.`);\n        }\n        this.product_list.splice(index,1);\n    }\n\n    /**\n     * 更新產品\n     * @param updating_item\n     */\n    updateItem (updating_item) {\n        let index = this.product_list.findIndex(item => item.id === updating_item.id);\n        if (index === -1) {\n            throw new ProductListException(`Error #3: Update product error, not such product id: ${id}.`);\n        }\n        // 更新產品部分資訊\n        for (let prop in updating_item) {\n            if (Object.prototype.hasOwnProperty.call(updating_item, prop)) {\n                this.product_list[index][prop] = updating_item[prop];\n            }\n        }\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/ProductList.js\n **/","/**\n * Created by simon on 9/4/16.\n */\n\n/**\n * ProductList 專屬 Exception\n */\nexport default class ProductListException  extends Error {\n    constructor(message) {\n        super(message);\n        this.name = this.constructor.name;\n        this.message = message;\n    }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/ProductListException.js\n **/"],"sourceRoot":""}